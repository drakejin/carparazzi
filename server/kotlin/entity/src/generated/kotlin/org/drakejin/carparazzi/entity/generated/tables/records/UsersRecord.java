/*
 * This file is generated by jOOQ.
 */
package org.drakejin.carparazzi.entity.generated.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.drakejin.carparazzi.entity.generated.tables.Users;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record6<UUID, String, String, OffsetDateTime, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users.user_id</code>.
     */
    public UsersRecord setUserId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    public UsersRecord setEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    @NotNull
    @Size(max = 255)
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.nickname</code>.
     */
    public UsersRecord setNickname(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.users.nickname</code>.
     */
    @Size(max = 100)
    public String getNickname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.created_at</code>.
     */
    public UsersRecord setCreatedAt(OffsetDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.users.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>public.users.last_login_at</code>.
     */
    public UsersRecord setLastLoginAt(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.users.last_login_at</code>.
     */
    public OffsetDateTime getLastLoginAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.users.status</code>.
     */
    public UsersRecord setStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.users.status</code>.
     */
    @Size(max = 20)
    public String getStatus() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, String, String, OffsetDateTime, OffsetDateTime, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<UUID, String, String, OffsetDateTime, OffsetDateTime, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Users.USERS.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.NICKNAME;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return Users.USERS.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return Users.USERS.LAST_LOGIN_AT;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.STATUS;
    }

    @Override
    public UUID component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getNickname();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component5() {
        return getLastLoginAt();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public UUID value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getNickname();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value5() {
        return getLastLoginAt();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public UsersRecord value1(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setNickname(value);
        return this;
    }

    @Override
    public UsersRecord value4(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UsersRecord value5(OffsetDateTime value) {
        setLastLoginAt(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public UsersRecord values(UUID value1, String value2, String value3, OffsetDateTime value4, OffsetDateTime value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(UUID userId, String email, String nickname, OffsetDateTime createdAt, OffsetDateTime lastLoginAt, String status) {
        super(Users.USERS);

        setUserId(userId);
        setEmail(email);
        setNickname(nickname);
        setCreatedAt(createdAt);
        setLastLoginAt(lastLoginAt);
        setStatus(status);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(org.drakejin.carparazzi.entity.generated.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setUserId(value.getUserId());
            setEmail(value.getEmail());
            setNickname(value.getNickname());
            setCreatedAt(value.getCreatedAt());
            setLastLoginAt(value.getLastLoginAt());
            setStatus(value.getStatus());
            resetChangedOnNotNull();
        }
    }
}
