/*
 * This file is generated by jOOQ.
 */
package org.drakejin.carparazzi.entity.generated.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class DownloadLogs implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID downloadId;
    private final UUID userId;
    private final UUID clipId;
    private final String downloadType;
    private final OffsetDateTime downloadedAt;
    private final String userAgent;
    private final Object ipAddress;

    public DownloadLogs(DownloadLogs value) {
        this.downloadId = value.downloadId;
        this.userId = value.userId;
        this.clipId = value.clipId;
        this.downloadType = value.downloadType;
        this.downloadedAt = value.downloadedAt;
        this.userAgent = value.userAgent;
        this.ipAddress = value.ipAddress;
    }

    public DownloadLogs(
        UUID downloadId,
        UUID userId,
        UUID clipId,
        String downloadType,
        OffsetDateTime downloadedAt,
        String userAgent,
        Object ipAddress
    ) {
        this.downloadId = downloadId;
        this.userId = userId;
        this.clipId = clipId;
        this.downloadType = downloadType;
        this.downloadedAt = downloadedAt;
        this.userAgent = userAgent;
        this.ipAddress = ipAddress;
    }

    /**
     * Getter for <code>public.download_logs.download_id</code>.
     */
    public UUID getDownloadId() {
        return this.downloadId;
    }

    /**
     * Getter for <code>public.download_logs.user_id</code>.
     */
    @NotNull
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Getter for <code>public.download_logs.clip_id</code>.
     */
    public UUID getClipId() {
        return this.clipId;
    }

    /**
     * Getter for <code>public.download_logs.download_type</code>.
     */
    @Size(max = 20)
    public String getDownloadType() {
        return this.downloadType;
    }

    /**
     * Getter for <code>public.download_logs.downloaded_at</code>.
     */
    public OffsetDateTime getDownloadedAt() {
        return this.downloadedAt;
    }

    /**
     * Getter for <code>public.download_logs.user_agent</code>.
     */
    public String getUserAgent() {
        return this.userAgent;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getIpAddress() {
        return this.ipAddress;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DownloadLogs other = (DownloadLogs) obj;
        if (this.downloadId == null) {
            if (other.downloadId != null)
                return false;
        }
        else if (!this.downloadId.equals(other.downloadId))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.clipId == null) {
            if (other.clipId != null)
                return false;
        }
        else if (!this.clipId.equals(other.clipId))
            return false;
        if (this.downloadType == null) {
            if (other.downloadType != null)
                return false;
        }
        else if (!this.downloadType.equals(other.downloadType))
            return false;
        if (this.downloadedAt == null) {
            if (other.downloadedAt != null)
                return false;
        }
        else if (!this.downloadedAt.equals(other.downloadedAt))
            return false;
        if (this.userAgent == null) {
            if (other.userAgent != null)
                return false;
        }
        else if (!this.userAgent.equals(other.userAgent))
            return false;
        if (this.ipAddress == null) {
            if (other.ipAddress != null)
                return false;
        }
        else if (!this.ipAddress.equals(other.ipAddress))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.downloadId == null) ? 0 : this.downloadId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.clipId == null) ? 0 : this.clipId.hashCode());
        result = prime * result + ((this.downloadType == null) ? 0 : this.downloadType.hashCode());
        result = prime * result + ((this.downloadedAt == null) ? 0 : this.downloadedAt.hashCode());
        result = prime * result + ((this.userAgent == null) ? 0 : this.userAgent.hashCode());
        result = prime * result + ((this.ipAddress == null) ? 0 : this.ipAddress.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DownloadLogs (");

        sb.append(downloadId);
        sb.append(", ").append(userId);
        sb.append(", ").append(clipId);
        sb.append(", ").append(downloadType);
        sb.append(", ").append(downloadedAt);
        sb.append(", ").append(userAgent);
        sb.append(", ").append(ipAddress);

        sb.append(")");
        return sb.toString();
    }
}
