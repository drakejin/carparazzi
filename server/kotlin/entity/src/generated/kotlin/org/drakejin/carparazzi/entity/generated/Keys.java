/*
 * This file is generated by jOOQ.
 */
package org.drakejin.carparazzi.entity.generated;


import org.drakejin.carparazzi.entity.generated.tables.AnalysisJobs;
import org.drakejin.carparazzi.entity.generated.tables.DownloadLogs;
import org.drakejin.carparazzi.entity.generated.tables.EvidenceClips;
import org.drakejin.carparazzi.entity.generated.tables.Users;
import org.drakejin.carparazzi.entity.generated.tables.VideoUploads;
import org.drakejin.carparazzi.entity.generated.tables.ViolationEvents;
import org.drakejin.carparazzi.entity.generated.tables.records.AnalysisJobsRecord;
import org.drakejin.carparazzi.entity.generated.tables.records.DownloadLogsRecord;
import org.drakejin.carparazzi.entity.generated.tables.records.EvidenceClipsRecord;
import org.drakejin.carparazzi.entity.generated.tables.records.UsersRecord;
import org.drakejin.carparazzi.entity.generated.tables.records.VideoUploadsRecord;
import org.drakejin.carparazzi.entity.generated.tables.records.ViolationEventsRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnalysisJobsRecord> ANALYSIS_JOBS_PKEY = Internal.createUniqueKey(AnalysisJobs.ANALYSIS_JOBS, DSL.name("analysis_jobs_pkey"), new TableField[] { AnalysisJobs.ANALYSIS_JOBS.JOB_ID }, true);
    public static final UniqueKey<DownloadLogsRecord> DOWNLOAD_LOGS_PKEY = Internal.createUniqueKey(DownloadLogs.DOWNLOAD_LOGS, DSL.name("download_logs_pkey"), new TableField[] { DownloadLogs.DOWNLOAD_LOGS.DOWNLOAD_ID }, true);
    public static final UniqueKey<EvidenceClipsRecord> EVIDENCE_CLIPS_PKEY = Internal.createUniqueKey(EvidenceClips.EVIDENCE_CLIPS, DSL.name("evidence_clips_pkey"), new TableField[] { EvidenceClips.EVIDENCE_CLIPS.CLIP_ID }, true);
    public static final UniqueKey<UsersRecord> USERS_EMAIL_KEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_email_key"), new TableField[] { Users.USERS.EMAIL }, true);
    public static final UniqueKey<UsersRecord> USERS_PKEY = Internal.createUniqueKey(Users.USERS, DSL.name("users_pkey"), new TableField[] { Users.USERS.USER_ID }, true);
    public static final UniqueKey<VideoUploadsRecord> VIDEO_UPLOADS_PKEY = Internal.createUniqueKey(VideoUploads.VIDEO_UPLOADS, DSL.name("video_uploads_pkey"), new TableField[] { VideoUploads.VIDEO_UPLOADS.UPLOAD_ID }, true);
    public static final UniqueKey<ViolationEventsRecord> VIOLATION_EVENTS_PKEY = Internal.createUniqueKey(ViolationEvents.VIOLATION_EVENTS, DSL.name("violation_events_pkey"), new TableField[] { ViolationEvents.VIOLATION_EVENTS.VIOLATION_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AnalysisJobsRecord, VideoUploadsRecord> ANALYSIS_JOBS__ANALYSIS_JOBS_UPLOAD_ID_FKEY = Internal.createForeignKey(AnalysisJobs.ANALYSIS_JOBS, DSL.name("analysis_jobs_upload_id_fkey"), new TableField[] { AnalysisJobs.ANALYSIS_JOBS.UPLOAD_ID }, Keys.VIDEO_UPLOADS_PKEY, new TableField[] { VideoUploads.VIDEO_UPLOADS.UPLOAD_ID }, true);
    public static final ForeignKey<DownloadLogsRecord, EvidenceClipsRecord> DOWNLOAD_LOGS__DOWNLOAD_LOGS_CLIP_ID_FKEY = Internal.createForeignKey(DownloadLogs.DOWNLOAD_LOGS, DSL.name("download_logs_clip_id_fkey"), new TableField[] { DownloadLogs.DOWNLOAD_LOGS.CLIP_ID }, Keys.EVIDENCE_CLIPS_PKEY, new TableField[] { EvidenceClips.EVIDENCE_CLIPS.CLIP_ID }, true);
    public static final ForeignKey<DownloadLogsRecord, UsersRecord> DOWNLOAD_LOGS__DOWNLOAD_LOGS_USER_ID_FKEY = Internal.createForeignKey(DownloadLogs.DOWNLOAD_LOGS, DSL.name("download_logs_user_id_fkey"), new TableField[] { DownloadLogs.DOWNLOAD_LOGS.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.USER_ID }, true);
    public static final ForeignKey<EvidenceClipsRecord, AnalysisJobsRecord> EVIDENCE_CLIPS__EVIDENCE_CLIPS_JOB_ID_FKEY = Internal.createForeignKey(EvidenceClips.EVIDENCE_CLIPS, DSL.name("evidence_clips_job_id_fkey"), new TableField[] { EvidenceClips.EVIDENCE_CLIPS.JOB_ID }, Keys.ANALYSIS_JOBS_PKEY, new TableField[] { AnalysisJobs.ANALYSIS_JOBS.JOB_ID }, true);
    public static final ForeignKey<EvidenceClipsRecord, ViolationEventsRecord> EVIDENCE_CLIPS__EVIDENCE_CLIPS_VIOLATION_ID_FKEY = Internal.createForeignKey(EvidenceClips.EVIDENCE_CLIPS, DSL.name("evidence_clips_violation_id_fkey"), new TableField[] { EvidenceClips.EVIDENCE_CLIPS.VIOLATION_ID }, Keys.VIOLATION_EVENTS_PKEY, new TableField[] { ViolationEvents.VIOLATION_EVENTS.VIOLATION_ID }, true);
    public static final ForeignKey<VideoUploadsRecord, UsersRecord> VIDEO_UPLOADS__VIDEO_UPLOADS_USER_ID_FKEY = Internal.createForeignKey(VideoUploads.VIDEO_UPLOADS, DSL.name("video_uploads_user_id_fkey"), new TableField[] { VideoUploads.VIDEO_UPLOADS.USER_ID }, Keys.USERS_PKEY, new TableField[] { Users.USERS.USER_ID }, true);
    public static final ForeignKey<ViolationEventsRecord, AnalysisJobsRecord> VIOLATION_EVENTS__VIOLATION_EVENTS_JOB_ID_FKEY = Internal.createForeignKey(ViolationEvents.VIOLATION_EVENTS, DSL.name("violation_events_job_id_fkey"), new TableField[] { ViolationEvents.VIOLATION_EVENTS.JOB_ID }, Keys.ANALYSIS_JOBS_PKEY, new TableField[] { AnalysisJobs.ANALYSIS_JOBS.JOB_ID }, true);
}
