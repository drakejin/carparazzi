/*
 * This file is generated by jOOQ.
 */
package org.drakejin.carparazzi.entity.generated.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;

import org.drakejin.carparazzi.entity.generated.tables.ViolationEvents;
import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViolationEventsRecord extends UpdatableRecordImpl<ViolationEventsRecord> implements Record9<UUID, UUID, String, BigDecimal, BigDecimal, String, String, JSONB, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.violation_events.violation_id</code>.
     */
    public ViolationEventsRecord setViolationId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.violation_events.violation_id</code>.
     */
    public UUID getViolationId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.violation_events.job_id</code>.
     */
    public ViolationEventsRecord setJobId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.violation_events.job_id</code>.
     */
    @NotNull
    public UUID getJobId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.violation_events.violation_type</code>.
     */
    public ViolationEventsRecord setViolationType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.violation_events.violation_type</code>.
     */
    @NotNull
    @Size(max = 30)
    public String getViolationType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.violation_events.timestamp_seconds</code>.
     */
    public ViolationEventsRecord setTimestampSeconds(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.violation_events.timestamp_seconds</code>.
     */
    @NotNull
    public BigDecimal getTimestampSeconds() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.violation_events.confidence_score</code>.
     */
    public ViolationEventsRecord setConfidenceScore(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.violation_events.confidence_score</code>.
     */
    @NotNull
    public BigDecimal getConfidenceScore() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.violation_events.severity_level</code>.
     */
    public ViolationEventsRecord setSeverityLevel(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.violation_events.severity_level</code>.
     */
    @Size(max = 10)
    public String getSeverityLevel() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.violation_events.description</code>.
     */
    public ViolationEventsRecord setDescription(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.violation_events.description</code>.
     */
    @NotNull
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.violation_events.detection_metadata</code>.
     */
    public ViolationEventsRecord setDetectionMetadata(JSONB value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.violation_events.detection_metadata</code>.
     */
    public JSONB getDetectionMetadata() {
        return (JSONB) get(7);
    }

    /**
     * Setter for <code>public.violation_events.detected_at</code>.
     */
    public ViolationEventsRecord setDetectedAt(OffsetDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.violation_events.detected_at</code>.
     */
    public OffsetDateTime getDetectedAt() {
        return (OffsetDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<UUID, UUID, String, BigDecimal, BigDecimal, String, String, JSONB, OffsetDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<UUID, UUID, String, BigDecimal, BigDecimal, String, String, JSONB, OffsetDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ViolationEvents.VIOLATION_EVENTS.VIOLATION_ID;
    }

    @Override
    public Field<UUID> field2() {
        return ViolationEvents.VIOLATION_EVENTS.JOB_ID;
    }

    @Override
    public Field<String> field3() {
        return ViolationEvents.VIOLATION_EVENTS.VIOLATION_TYPE;
    }

    @Override
    public Field<BigDecimal> field4() {
        return ViolationEvents.VIOLATION_EVENTS.TIMESTAMP_SECONDS;
    }

    @Override
    public Field<BigDecimal> field5() {
        return ViolationEvents.VIOLATION_EVENTS.CONFIDENCE_SCORE;
    }

    @Override
    public Field<String> field6() {
        return ViolationEvents.VIOLATION_EVENTS.SEVERITY_LEVEL;
    }

    @Override
    public Field<String> field7() {
        return ViolationEvents.VIOLATION_EVENTS.DESCRIPTION;
    }

    @Override
    public Field<JSONB> field8() {
        return ViolationEvents.VIOLATION_EVENTS.DETECTION_METADATA;
    }

    @Override
    public Field<OffsetDateTime> field9() {
        return ViolationEvents.VIOLATION_EVENTS.DETECTED_AT;
    }

    @Override
    public UUID component1() {
        return getViolationId();
    }

    @Override
    public UUID component2() {
        return getJobId();
    }

    @Override
    public String component3() {
        return getViolationType();
    }

    @Override
    public BigDecimal component4() {
        return getTimestampSeconds();
    }

    @Override
    public BigDecimal component5() {
        return getConfidenceScore();
    }

    @Override
    public String component6() {
        return getSeverityLevel();
    }

    @Override
    public String component7() {
        return getDescription();
    }

    @Override
    public JSONB component8() {
        return getDetectionMetadata();
    }

    @Override
    public OffsetDateTime component9() {
        return getDetectedAt();
    }

    @Override
    public UUID value1() {
        return getViolationId();
    }

    @Override
    public UUID value2() {
        return getJobId();
    }

    @Override
    public String value3() {
        return getViolationType();
    }

    @Override
    public BigDecimal value4() {
        return getTimestampSeconds();
    }

    @Override
    public BigDecimal value5() {
        return getConfidenceScore();
    }

    @Override
    public String value6() {
        return getSeverityLevel();
    }

    @Override
    public String value7() {
        return getDescription();
    }

    @Override
    public JSONB value8() {
        return getDetectionMetadata();
    }

    @Override
    public OffsetDateTime value9() {
        return getDetectedAt();
    }

    @Override
    public ViolationEventsRecord value1(UUID value) {
        setViolationId(value);
        return this;
    }

    @Override
    public ViolationEventsRecord value2(UUID value) {
        setJobId(value);
        return this;
    }

    @Override
    public ViolationEventsRecord value3(String value) {
        setViolationType(value);
        return this;
    }

    @Override
    public ViolationEventsRecord value4(BigDecimal value) {
        setTimestampSeconds(value);
        return this;
    }

    @Override
    public ViolationEventsRecord value5(BigDecimal value) {
        setConfidenceScore(value);
        return this;
    }

    @Override
    public ViolationEventsRecord value6(String value) {
        setSeverityLevel(value);
        return this;
    }

    @Override
    public ViolationEventsRecord value7(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ViolationEventsRecord value8(JSONB value) {
        setDetectionMetadata(value);
        return this;
    }

    @Override
    public ViolationEventsRecord value9(OffsetDateTime value) {
        setDetectedAt(value);
        return this;
    }

    @Override
    public ViolationEventsRecord values(UUID value1, UUID value2, String value3, BigDecimal value4, BigDecimal value5, String value6, String value7, JSONB value8, OffsetDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViolationEventsRecord
     */
    public ViolationEventsRecord() {
        super(ViolationEvents.VIOLATION_EVENTS);
    }

    /**
     * Create a detached, initialised ViolationEventsRecord
     */
    public ViolationEventsRecord(UUID violationId, UUID jobId, String violationType, BigDecimal timestampSeconds, BigDecimal confidenceScore, String severityLevel, String description, JSONB detectionMetadata, OffsetDateTime detectedAt) {
        super(ViolationEvents.VIOLATION_EVENTS);

        setViolationId(violationId);
        setJobId(jobId);
        setViolationType(violationType);
        setTimestampSeconds(timestampSeconds);
        setConfidenceScore(confidenceScore);
        setSeverityLevel(severityLevel);
        setDescription(description);
        setDetectionMetadata(detectionMetadata);
        setDetectedAt(detectedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ViolationEventsRecord
     */
    public ViolationEventsRecord(org.drakejin.carparazzi.entity.generated.tables.pojos.ViolationEvents value) {
        super(ViolationEvents.VIOLATION_EVENTS);

        if (value != null) {
            setViolationId(value.getViolationId());
            setJobId(value.getJobId());
            setViolationType(value.getViolationType());
            setTimestampSeconds(value.getTimestampSeconds());
            setConfidenceScore(value.getConfidenceScore());
            setSeverityLevel(value.getSeverityLevel());
            setDescription(value.getDescription());
            setDetectionMetadata(value.getDetectionMetadata());
            setDetectedAt(value.getDetectedAt());
            resetChangedOnNotNull();
        }
    }
}
