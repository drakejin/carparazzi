/*
 * This file is generated by jOOQ.
 */
package org.drakejin.carparazzi.entity.generated.tables.pojos;


import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.math.BigDecimal;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViolationTypeStats implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String violationType;
    private final Long totalCount;
    private final BigDecimal avgConfidence;
    private final Long criticalCount;
    private final Long highCount;
    private final Long mediumCount;
    private final Long lowCount;

    public ViolationTypeStats(ViolationTypeStats value) {
        this.violationType = value.violationType;
        this.totalCount = value.totalCount;
        this.avgConfidence = value.avgConfidence;
        this.criticalCount = value.criticalCount;
        this.highCount = value.highCount;
        this.mediumCount = value.mediumCount;
        this.lowCount = value.lowCount;
    }

    public ViolationTypeStats(
        String violationType,
        Long totalCount,
        BigDecimal avgConfidence,
        Long criticalCount,
        Long highCount,
        Long mediumCount,
        Long lowCount
    ) {
        this.violationType = violationType;
        this.totalCount = totalCount;
        this.avgConfidence = avgConfidence;
        this.criticalCount = criticalCount;
        this.highCount = highCount;
        this.mediumCount = mediumCount;
        this.lowCount = lowCount;
    }

    /**
     * Getter for <code>public.violation_type_stats.violation_type</code>.
     */
    @Size(max = 30)
    public String getViolationType() {
        return this.violationType;
    }

    /**
     * Getter for <code>public.violation_type_stats.total_count</code>.
     */
    public Long getTotalCount() {
        return this.totalCount;
    }

    /**
     * Getter for <code>public.violation_type_stats.avg_confidence</code>.
     */
    public BigDecimal getAvgConfidence() {
        return this.avgConfidence;
    }

    /**
     * Getter for <code>public.violation_type_stats.critical_count</code>.
     */
    public Long getCriticalCount() {
        return this.criticalCount;
    }

    /**
     * Getter for <code>public.violation_type_stats.high_count</code>.
     */
    public Long getHighCount() {
        return this.highCount;
    }

    /**
     * Getter for <code>public.violation_type_stats.medium_count</code>.
     */
    public Long getMediumCount() {
        return this.mediumCount;
    }

    /**
     * Getter for <code>public.violation_type_stats.low_count</code>.
     */
    public Long getLowCount() {
        return this.lowCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ViolationTypeStats other = (ViolationTypeStats) obj;
        if (this.violationType == null) {
            if (other.violationType != null)
                return false;
        }
        else if (!this.violationType.equals(other.violationType))
            return false;
        if (this.totalCount == null) {
            if (other.totalCount != null)
                return false;
        }
        else if (!this.totalCount.equals(other.totalCount))
            return false;
        if (this.avgConfidence == null) {
            if (other.avgConfidence != null)
                return false;
        }
        else if (!this.avgConfidence.equals(other.avgConfidence))
            return false;
        if (this.criticalCount == null) {
            if (other.criticalCount != null)
                return false;
        }
        else if (!this.criticalCount.equals(other.criticalCount))
            return false;
        if (this.highCount == null) {
            if (other.highCount != null)
                return false;
        }
        else if (!this.highCount.equals(other.highCount))
            return false;
        if (this.mediumCount == null) {
            if (other.mediumCount != null)
                return false;
        }
        else if (!this.mediumCount.equals(other.mediumCount))
            return false;
        if (this.lowCount == null) {
            if (other.lowCount != null)
                return false;
        }
        else if (!this.lowCount.equals(other.lowCount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.violationType == null) ? 0 : this.violationType.hashCode());
        result = prime * result + ((this.totalCount == null) ? 0 : this.totalCount.hashCode());
        result = prime * result + ((this.avgConfidence == null) ? 0 : this.avgConfidence.hashCode());
        result = prime * result + ((this.criticalCount == null) ? 0 : this.criticalCount.hashCode());
        result = prime * result + ((this.highCount == null) ? 0 : this.highCount.hashCode());
        result = prime * result + ((this.mediumCount == null) ? 0 : this.mediumCount.hashCode());
        result = prime * result + ((this.lowCount == null) ? 0 : this.lowCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViolationTypeStats (");

        sb.append(violationType);
        sb.append(", ").append(totalCount);
        sb.append(", ").append(avgConfidence);
        sb.append(", ").append(criticalCount);
        sb.append(", ").append(highCount);
        sb.append(", ").append(mediumCount);
        sb.append(", ").append(lowCount);

        sb.append(")");
        return sb.toString();
    }
}
