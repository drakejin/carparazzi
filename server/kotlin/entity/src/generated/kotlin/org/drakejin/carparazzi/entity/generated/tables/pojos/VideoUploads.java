/*
 * This file is generated by jOOQ.
 */
package org.drakejin.carparazzi.entity.generated.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class VideoUploads implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID uploadId;
    private final UUID userId;
    private final String originalFilename;
    private final String s3Key;
    private final Long fileSizeBytes;
    private final Integer durationSeconds;
    private final String fileFormat;
    private final String uploadStatus;
    private final OffsetDateTime uploadedAt;
    private final OffsetDateTime completedAt;

    public VideoUploads(VideoUploads value) {
        this.uploadId = value.uploadId;
        this.userId = value.userId;
        this.originalFilename = value.originalFilename;
        this.s3Key = value.s3Key;
        this.fileSizeBytes = value.fileSizeBytes;
        this.durationSeconds = value.durationSeconds;
        this.fileFormat = value.fileFormat;
        this.uploadStatus = value.uploadStatus;
        this.uploadedAt = value.uploadedAt;
        this.completedAt = value.completedAt;
    }

    public VideoUploads(
        UUID uploadId,
        UUID userId,
        String originalFilename,
        String s3Key,
        Long fileSizeBytes,
        Integer durationSeconds,
        String fileFormat,
        String uploadStatus,
        OffsetDateTime uploadedAt,
        OffsetDateTime completedAt
    ) {
        this.uploadId = uploadId;
        this.userId = userId;
        this.originalFilename = originalFilename;
        this.s3Key = s3Key;
        this.fileSizeBytes = fileSizeBytes;
        this.durationSeconds = durationSeconds;
        this.fileFormat = fileFormat;
        this.uploadStatus = uploadStatus;
        this.uploadedAt = uploadedAt;
        this.completedAt = completedAt;
    }

    /**
     * Getter for <code>public.video_uploads.upload_id</code>.
     */
    public UUID getUploadId() {
        return this.uploadId;
    }

    /**
     * Getter for <code>public.video_uploads.user_id</code>.
     */
    @NotNull
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Getter for <code>public.video_uploads.original_filename</code>.
     */
    @NotNull
    @Size(max = 255)
    public String getOriginalFilename() {
        return this.originalFilename;
    }

    /**
     * Getter for <code>public.video_uploads.s3_key</code>.
     */
    @NotNull
    @Size(max = 500)
    public String getS3Key() {
        return this.s3Key;
    }

    /**
     * Getter for <code>public.video_uploads.file_size_bytes</code>.
     */
    @NotNull
    public Long getFileSizeBytes() {
        return this.fileSizeBytes;
    }

    /**
     * Getter for <code>public.video_uploads.duration_seconds</code>.
     */
    public Integer getDurationSeconds() {
        return this.durationSeconds;
    }

    /**
     * Getter for <code>public.video_uploads.file_format</code>.
     */
    @NotNull
    @Size(max = 10)
    public String getFileFormat() {
        return this.fileFormat;
    }

    /**
     * Getter for <code>public.video_uploads.upload_status</code>.
     */
    @Size(max = 20)
    public String getUploadStatus() {
        return this.uploadStatus;
    }

    /**
     * Getter for <code>public.video_uploads.uploaded_at</code>.
     */
    public OffsetDateTime getUploadedAt() {
        return this.uploadedAt;
    }

    /**
     * Getter for <code>public.video_uploads.completed_at</code>.
     */
    public OffsetDateTime getCompletedAt() {
        return this.completedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final VideoUploads other = (VideoUploads) obj;
        if (this.uploadId == null) {
            if (other.uploadId != null)
                return false;
        }
        else if (!this.uploadId.equals(other.uploadId))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.originalFilename == null) {
            if (other.originalFilename != null)
                return false;
        }
        else if (!this.originalFilename.equals(other.originalFilename))
            return false;
        if (this.s3Key == null) {
            if (other.s3Key != null)
                return false;
        }
        else if (!this.s3Key.equals(other.s3Key))
            return false;
        if (this.fileSizeBytes == null) {
            if (other.fileSizeBytes != null)
                return false;
        }
        else if (!this.fileSizeBytes.equals(other.fileSizeBytes))
            return false;
        if (this.durationSeconds == null) {
            if (other.durationSeconds != null)
                return false;
        }
        else if (!this.durationSeconds.equals(other.durationSeconds))
            return false;
        if (this.fileFormat == null) {
            if (other.fileFormat != null)
                return false;
        }
        else if (!this.fileFormat.equals(other.fileFormat))
            return false;
        if (this.uploadStatus == null) {
            if (other.uploadStatus != null)
                return false;
        }
        else if (!this.uploadStatus.equals(other.uploadStatus))
            return false;
        if (this.uploadedAt == null) {
            if (other.uploadedAt != null)
                return false;
        }
        else if (!this.uploadedAt.equals(other.uploadedAt))
            return false;
        if (this.completedAt == null) {
            if (other.completedAt != null)
                return false;
        }
        else if (!this.completedAt.equals(other.completedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.uploadId == null) ? 0 : this.uploadId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.originalFilename == null) ? 0 : this.originalFilename.hashCode());
        result = prime * result + ((this.s3Key == null) ? 0 : this.s3Key.hashCode());
        result = prime * result + ((this.fileSizeBytes == null) ? 0 : this.fileSizeBytes.hashCode());
        result = prime * result + ((this.durationSeconds == null) ? 0 : this.durationSeconds.hashCode());
        result = prime * result + ((this.fileFormat == null) ? 0 : this.fileFormat.hashCode());
        result = prime * result + ((this.uploadStatus == null) ? 0 : this.uploadStatus.hashCode());
        result = prime * result + ((this.uploadedAt == null) ? 0 : this.uploadedAt.hashCode());
        result = prime * result + ((this.completedAt == null) ? 0 : this.completedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("VideoUploads (");

        sb.append(uploadId);
        sb.append(", ").append(userId);
        sb.append(", ").append(originalFilename);
        sb.append(", ").append(s3Key);
        sb.append(", ").append(fileSizeBytes);
        sb.append(", ").append(durationSeconds);
        sb.append(", ").append(fileFormat);
        sb.append(", ").append(uploadStatus);
        sb.append(", ").append(uploadedAt);
        sb.append(", ").append(completedAt);

        sb.append(")");
        return sb.toString();
    }
}
