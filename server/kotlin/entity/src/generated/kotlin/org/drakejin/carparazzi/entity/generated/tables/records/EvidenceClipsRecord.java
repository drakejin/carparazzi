/*
 * This file is generated by jOOQ.
 */
package org.drakejin.carparazzi.entity.generated.tables.records;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;

import org.drakejin.carparazzi.entity.generated.tables.EvidenceClips;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EvidenceClipsRecord extends UpdatableRecordImpl<EvidenceClipsRecord> implements Record12<UUID, UUID, UUID, String, BigDecimal, BigDecimal, BigDecimal, Long, String, String, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.evidence_clips.clip_id</code>.
     */
    public EvidenceClipsRecord setClipId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.clip_id</code>.
     */
    public UUID getClipId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.evidence_clips.violation_id</code>.
     */
    public EvidenceClipsRecord setViolationId(UUID value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.violation_id</code>.
     */
    @NotNull
    public UUID getViolationId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.evidence_clips.job_id</code>.
     */
    public EvidenceClipsRecord setJobId(UUID value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.job_id</code>.
     */
    @NotNull
    public UUID getJobId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.evidence_clips.s3_key</code>.
     */
    public EvidenceClipsRecord setS3Key(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.s3_key</code>.
     */
    @NotNull
    @Size(max = 500)
    public String getS3Key() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.evidence_clips.start_time_seconds</code>.
     */
    public EvidenceClipsRecord setStartTimeSeconds(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.start_time_seconds</code>.
     */
    @NotNull
    public BigDecimal getStartTimeSeconds() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.evidence_clips.end_time_seconds</code>.
     */
    public EvidenceClipsRecord setEndTimeSeconds(BigDecimal value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.end_time_seconds</code>.
     */
    @NotNull
    public BigDecimal getEndTimeSeconds() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.evidence_clips.duration_seconds</code>.
     */
    public EvidenceClipsRecord setDurationSeconds(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.duration_seconds</code>.
     */
    public BigDecimal getDurationSeconds() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.evidence_clips.file_size_bytes</code>.
     */
    public EvidenceClipsRecord setFileSizeBytes(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.file_size_bytes</code>.
     */
    public Long getFileSizeBytes() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.evidence_clips.clip_status</code>.
     */
    public EvidenceClipsRecord setClipStatus(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.clip_status</code>.
     */
    @Size(max = 20)
    public String getClipStatus() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.evidence_clips.download_url</code>.
     */
    public EvidenceClipsRecord setDownloadUrl(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.download_url</code>.
     */
    @Size(max = 1000)
    public String getDownloadUrl() {
        return (String) get(9);
    }

    /**
     * Setter for <code>public.evidence_clips.created_at</code>.
     */
    public EvidenceClipsRecord setCreatedAt(OffsetDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for <code>public.evidence_clips.expires_at</code>.
     */
    public EvidenceClipsRecord setExpiresAt(OffsetDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.evidence_clips.expires_at</code>.
     */
    public OffsetDateTime getExpiresAt() {
        return (OffsetDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<UUID, UUID, UUID, String, BigDecimal, BigDecimal, BigDecimal, Long, String, String, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<UUID, UUID, UUID, String, BigDecimal, BigDecimal, BigDecimal, Long, String, String, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return EvidenceClips.EVIDENCE_CLIPS.CLIP_ID;
    }

    @Override
    public Field<UUID> field2() {
        return EvidenceClips.EVIDENCE_CLIPS.VIOLATION_ID;
    }

    @Override
    public Field<UUID> field3() {
        return EvidenceClips.EVIDENCE_CLIPS.JOB_ID;
    }

    @Override
    public Field<String> field4() {
        return EvidenceClips.EVIDENCE_CLIPS.S3_KEY;
    }

    @Override
    public Field<BigDecimal> field5() {
        return EvidenceClips.EVIDENCE_CLIPS.START_TIME_SECONDS;
    }

    @Override
    public Field<BigDecimal> field6() {
        return EvidenceClips.EVIDENCE_CLIPS.END_TIME_SECONDS;
    }

    @Override
    public Field<BigDecimal> field7() {
        return EvidenceClips.EVIDENCE_CLIPS.DURATION_SECONDS;
    }

    @Override
    public Field<Long> field8() {
        return EvidenceClips.EVIDENCE_CLIPS.FILE_SIZE_BYTES;
    }

    @Override
    public Field<String> field9() {
        return EvidenceClips.EVIDENCE_CLIPS.CLIP_STATUS;
    }

    @Override
    public Field<String> field10() {
        return EvidenceClips.EVIDENCE_CLIPS.DOWNLOAD_URL;
    }

    @Override
    public Field<OffsetDateTime> field11() {
        return EvidenceClips.EVIDENCE_CLIPS.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field12() {
        return EvidenceClips.EVIDENCE_CLIPS.EXPIRES_AT;
    }

    @Override
    public UUID component1() {
        return getClipId();
    }

    @Override
    public UUID component2() {
        return getViolationId();
    }

    @Override
    public UUID component3() {
        return getJobId();
    }

    @Override
    public String component4() {
        return getS3Key();
    }

    @Override
    public BigDecimal component5() {
        return getStartTimeSeconds();
    }

    @Override
    public BigDecimal component6() {
        return getEndTimeSeconds();
    }

    @Override
    public BigDecimal component7() {
        return getDurationSeconds();
    }

    @Override
    public Long component8() {
        return getFileSizeBytes();
    }

    @Override
    public String component9() {
        return getClipStatus();
    }

    @Override
    public String component10() {
        return getDownloadUrl();
    }

    @Override
    public OffsetDateTime component11() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component12() {
        return getExpiresAt();
    }

    @Override
    public UUID value1() {
        return getClipId();
    }

    @Override
    public UUID value2() {
        return getViolationId();
    }

    @Override
    public UUID value3() {
        return getJobId();
    }

    @Override
    public String value4() {
        return getS3Key();
    }

    @Override
    public BigDecimal value5() {
        return getStartTimeSeconds();
    }

    @Override
    public BigDecimal value6() {
        return getEndTimeSeconds();
    }

    @Override
    public BigDecimal value7() {
        return getDurationSeconds();
    }

    @Override
    public Long value8() {
        return getFileSizeBytes();
    }

    @Override
    public String value9() {
        return getClipStatus();
    }

    @Override
    public String value10() {
        return getDownloadUrl();
    }

    @Override
    public OffsetDateTime value11() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value12() {
        return getExpiresAt();
    }

    @Override
    public EvidenceClipsRecord value1(UUID value) {
        setClipId(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value2(UUID value) {
        setViolationId(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value3(UUID value) {
        setJobId(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value4(String value) {
        setS3Key(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value5(BigDecimal value) {
        setStartTimeSeconds(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value6(BigDecimal value) {
        setEndTimeSeconds(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value7(BigDecimal value) {
        setDurationSeconds(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value8(Long value) {
        setFileSizeBytes(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value9(String value) {
        setClipStatus(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value10(String value) {
        setDownloadUrl(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value11(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord value12(OffsetDateTime value) {
        setExpiresAt(value);
        return this;
    }

    @Override
    public EvidenceClipsRecord values(UUID value1, UUID value2, UUID value3, String value4, BigDecimal value5, BigDecimal value6, BigDecimal value7, Long value8, String value9, String value10, OffsetDateTime value11, OffsetDateTime value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EvidenceClipsRecord
     */
    public EvidenceClipsRecord() {
        super(EvidenceClips.EVIDENCE_CLIPS);
    }

    /**
     * Create a detached, initialised EvidenceClipsRecord
     */
    public EvidenceClipsRecord(UUID clipId, UUID violationId, UUID jobId, String s3Key, BigDecimal startTimeSeconds, BigDecimal endTimeSeconds, BigDecimal durationSeconds, Long fileSizeBytes, String clipStatus, String downloadUrl, OffsetDateTime createdAt, OffsetDateTime expiresAt) {
        super(EvidenceClips.EVIDENCE_CLIPS);

        setClipId(clipId);
        setViolationId(violationId);
        setJobId(jobId);
        setS3Key(s3Key);
        setStartTimeSeconds(startTimeSeconds);
        setEndTimeSeconds(endTimeSeconds);
        setDurationSeconds(durationSeconds);
        setFileSizeBytes(fileSizeBytes);
        setClipStatus(clipStatus);
        setDownloadUrl(downloadUrl);
        setCreatedAt(createdAt);
        setExpiresAt(expiresAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised EvidenceClipsRecord
     */
    public EvidenceClipsRecord(org.drakejin.carparazzi.entity.generated.tables.pojos.EvidenceClips value) {
        super(EvidenceClips.EVIDENCE_CLIPS);

        if (value != null) {
            setClipId(value.getClipId());
            setViolationId(value.getViolationId());
            setJobId(value.getJobId());
            setS3Key(value.getS3Key());
            setStartTimeSeconds(value.getStartTimeSeconds());
            setEndTimeSeconds(value.getEndTimeSeconds());
            setDurationSeconds(value.getDurationSeconds());
            setFileSizeBytes(value.getFileSizeBytes());
            setClipStatus(value.getClipStatus());
            setDownloadUrl(value.getDownloadUrl());
            setCreatedAt(value.getCreatedAt());
            setExpiresAt(value.getExpiresAt());
            resetChangedOnNotNull();
        }
    }
}
