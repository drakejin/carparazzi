/*
 * This file is generated by jOOQ.
 */
package org.drakejin.carparazzi.entity.generated.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EvidenceClips implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID clipId;
    private final UUID violationId;
    private final UUID jobId;
    private final String s3Key;
    private final BigDecimal startTimeSeconds;
    private final BigDecimal endTimeSeconds;
    private final BigDecimal durationSeconds;
    private final Long fileSizeBytes;
    private final String clipStatus;
    private final String downloadUrl;
    private final OffsetDateTime createdAt;
    private final OffsetDateTime expiresAt;

    public EvidenceClips(EvidenceClips value) {
        this.clipId = value.clipId;
        this.violationId = value.violationId;
        this.jobId = value.jobId;
        this.s3Key = value.s3Key;
        this.startTimeSeconds = value.startTimeSeconds;
        this.endTimeSeconds = value.endTimeSeconds;
        this.durationSeconds = value.durationSeconds;
        this.fileSizeBytes = value.fileSizeBytes;
        this.clipStatus = value.clipStatus;
        this.downloadUrl = value.downloadUrl;
        this.createdAt = value.createdAt;
        this.expiresAt = value.expiresAt;
    }

    public EvidenceClips(
        UUID clipId,
        UUID violationId,
        UUID jobId,
        String s3Key,
        BigDecimal startTimeSeconds,
        BigDecimal endTimeSeconds,
        BigDecimal durationSeconds,
        Long fileSizeBytes,
        String clipStatus,
        String downloadUrl,
        OffsetDateTime createdAt,
        OffsetDateTime expiresAt
    ) {
        this.clipId = clipId;
        this.violationId = violationId;
        this.jobId = jobId;
        this.s3Key = s3Key;
        this.startTimeSeconds = startTimeSeconds;
        this.endTimeSeconds = endTimeSeconds;
        this.durationSeconds = durationSeconds;
        this.fileSizeBytes = fileSizeBytes;
        this.clipStatus = clipStatus;
        this.downloadUrl = downloadUrl;
        this.createdAt = createdAt;
        this.expiresAt = expiresAt;
    }

    /**
     * Getter for <code>public.evidence_clips.clip_id</code>.
     */
    public UUID getClipId() {
        return this.clipId;
    }

    /**
     * Getter for <code>public.evidence_clips.violation_id</code>.
     */
    @NotNull
    public UUID getViolationId() {
        return this.violationId;
    }

    /**
     * Getter for <code>public.evidence_clips.job_id</code>.
     */
    @NotNull
    public UUID getJobId() {
        return this.jobId;
    }

    /**
     * Getter for <code>public.evidence_clips.s3_key</code>.
     */
    @NotNull
    @Size(max = 500)
    public String getS3Key() {
        return this.s3Key;
    }

    /**
     * Getter for <code>public.evidence_clips.start_time_seconds</code>.
     */
    @NotNull
    public BigDecimal getStartTimeSeconds() {
        return this.startTimeSeconds;
    }

    /**
     * Getter for <code>public.evidence_clips.end_time_seconds</code>.
     */
    @NotNull
    public BigDecimal getEndTimeSeconds() {
        return this.endTimeSeconds;
    }

    /**
     * Getter for <code>public.evidence_clips.duration_seconds</code>.
     */
    public BigDecimal getDurationSeconds() {
        return this.durationSeconds;
    }

    /**
     * Getter for <code>public.evidence_clips.file_size_bytes</code>.
     */
    public Long getFileSizeBytes() {
        return this.fileSizeBytes;
    }

    /**
     * Getter for <code>public.evidence_clips.clip_status</code>.
     */
    @Size(max = 20)
    public String getClipStatus() {
        return this.clipStatus;
    }

    /**
     * Getter for <code>public.evidence_clips.download_url</code>.
     */
    @Size(max = 1000)
    public String getDownloadUrl() {
        return this.downloadUrl;
    }

    /**
     * Getter for <code>public.evidence_clips.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>public.evidence_clips.expires_at</code>.
     */
    public OffsetDateTime getExpiresAt() {
        return this.expiresAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final EvidenceClips other = (EvidenceClips) obj;
        if (this.clipId == null) {
            if (other.clipId != null)
                return false;
        }
        else if (!this.clipId.equals(other.clipId))
            return false;
        if (this.violationId == null) {
            if (other.violationId != null)
                return false;
        }
        else if (!this.violationId.equals(other.violationId))
            return false;
        if (this.jobId == null) {
            if (other.jobId != null)
                return false;
        }
        else if (!this.jobId.equals(other.jobId))
            return false;
        if (this.s3Key == null) {
            if (other.s3Key != null)
                return false;
        }
        else if (!this.s3Key.equals(other.s3Key))
            return false;
        if (this.startTimeSeconds == null) {
            if (other.startTimeSeconds != null)
                return false;
        }
        else if (!this.startTimeSeconds.equals(other.startTimeSeconds))
            return false;
        if (this.endTimeSeconds == null) {
            if (other.endTimeSeconds != null)
                return false;
        }
        else if (!this.endTimeSeconds.equals(other.endTimeSeconds))
            return false;
        if (this.durationSeconds == null) {
            if (other.durationSeconds != null)
                return false;
        }
        else if (!this.durationSeconds.equals(other.durationSeconds))
            return false;
        if (this.fileSizeBytes == null) {
            if (other.fileSizeBytes != null)
                return false;
        }
        else if (!this.fileSizeBytes.equals(other.fileSizeBytes))
            return false;
        if (this.clipStatus == null) {
            if (other.clipStatus != null)
                return false;
        }
        else if (!this.clipStatus.equals(other.clipStatus))
            return false;
        if (this.downloadUrl == null) {
            if (other.downloadUrl != null)
                return false;
        }
        else if (!this.downloadUrl.equals(other.downloadUrl))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.expiresAt == null) {
            if (other.expiresAt != null)
                return false;
        }
        else if (!this.expiresAt.equals(other.expiresAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.clipId == null) ? 0 : this.clipId.hashCode());
        result = prime * result + ((this.violationId == null) ? 0 : this.violationId.hashCode());
        result = prime * result + ((this.jobId == null) ? 0 : this.jobId.hashCode());
        result = prime * result + ((this.s3Key == null) ? 0 : this.s3Key.hashCode());
        result = prime * result + ((this.startTimeSeconds == null) ? 0 : this.startTimeSeconds.hashCode());
        result = prime * result + ((this.endTimeSeconds == null) ? 0 : this.endTimeSeconds.hashCode());
        result = prime * result + ((this.durationSeconds == null) ? 0 : this.durationSeconds.hashCode());
        result = prime * result + ((this.fileSizeBytes == null) ? 0 : this.fileSizeBytes.hashCode());
        result = prime * result + ((this.clipStatus == null) ? 0 : this.clipStatus.hashCode());
        result = prime * result + ((this.downloadUrl == null) ? 0 : this.downloadUrl.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.expiresAt == null) ? 0 : this.expiresAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("EvidenceClips (");

        sb.append(clipId);
        sb.append(", ").append(violationId);
        sb.append(", ").append(jobId);
        sb.append(", ").append(s3Key);
        sb.append(", ").append(startTimeSeconds);
        sb.append(", ").append(endTimeSeconds);
        sb.append(", ").append(durationSeconds);
        sb.append(", ").append(fileSizeBytes);
        sb.append(", ").append(clipStatus);
        sb.append(", ").append(downloadUrl);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(expiresAt);

        sb.append(")");
        return sb.toString();
    }
}
