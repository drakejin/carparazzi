/*
 * This file is generated by jOOQ.
 */
package org.drakejin.carparazzi.entity.generated.tables.pojos;


import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ViolationEvents implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID violationId;
    private final UUID jobId;
    private final String violationType;
    private final BigDecimal timestampSeconds;
    private final BigDecimal confidenceScore;
    private final String severityLevel;
    private final String description;
    private final JSONB detectionMetadata;
    private final OffsetDateTime detectedAt;

    public ViolationEvents(ViolationEvents value) {
        this.violationId = value.violationId;
        this.jobId = value.jobId;
        this.violationType = value.violationType;
        this.timestampSeconds = value.timestampSeconds;
        this.confidenceScore = value.confidenceScore;
        this.severityLevel = value.severityLevel;
        this.description = value.description;
        this.detectionMetadata = value.detectionMetadata;
        this.detectedAt = value.detectedAt;
    }

    public ViolationEvents(
        UUID violationId,
        UUID jobId,
        String violationType,
        BigDecimal timestampSeconds,
        BigDecimal confidenceScore,
        String severityLevel,
        String description,
        JSONB detectionMetadata,
        OffsetDateTime detectedAt
    ) {
        this.violationId = violationId;
        this.jobId = jobId;
        this.violationType = violationType;
        this.timestampSeconds = timestampSeconds;
        this.confidenceScore = confidenceScore;
        this.severityLevel = severityLevel;
        this.description = description;
        this.detectionMetadata = detectionMetadata;
        this.detectedAt = detectedAt;
    }

    /**
     * Getter for <code>public.violation_events.violation_id</code>.
     */
    public UUID getViolationId() {
        return this.violationId;
    }

    /**
     * Getter for <code>public.violation_events.job_id</code>.
     */
    @NotNull
    public UUID getJobId() {
        return this.jobId;
    }

    /**
     * Getter for <code>public.violation_events.violation_type</code>.
     */
    @NotNull
    @Size(max = 30)
    public String getViolationType() {
        return this.violationType;
    }

    /**
     * Getter for <code>public.violation_events.timestamp_seconds</code>.
     */
    @NotNull
    public BigDecimal getTimestampSeconds() {
        return this.timestampSeconds;
    }

    /**
     * Getter for <code>public.violation_events.confidence_score</code>.
     */
    @NotNull
    public BigDecimal getConfidenceScore() {
        return this.confidenceScore;
    }

    /**
     * Getter for <code>public.violation_events.severity_level</code>.
     */
    @Size(max = 10)
    public String getSeverityLevel() {
        return this.severityLevel;
    }

    /**
     * Getter for <code>public.violation_events.description</code>.
     */
    @NotNull
    public String getDescription() {
        return this.description;
    }

    /**
     * Getter for <code>public.violation_events.detection_metadata</code>.
     */
    public JSONB getDetectionMetadata() {
        return this.detectionMetadata;
    }

    /**
     * Getter for <code>public.violation_events.detected_at</code>.
     */
    public OffsetDateTime getDetectedAt() {
        return this.detectedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ViolationEvents other = (ViolationEvents) obj;
        if (this.violationId == null) {
            if (other.violationId != null)
                return false;
        }
        else if (!this.violationId.equals(other.violationId))
            return false;
        if (this.jobId == null) {
            if (other.jobId != null)
                return false;
        }
        else if (!this.jobId.equals(other.jobId))
            return false;
        if (this.violationType == null) {
            if (other.violationType != null)
                return false;
        }
        else if (!this.violationType.equals(other.violationType))
            return false;
        if (this.timestampSeconds == null) {
            if (other.timestampSeconds != null)
                return false;
        }
        else if (!this.timestampSeconds.equals(other.timestampSeconds))
            return false;
        if (this.confidenceScore == null) {
            if (other.confidenceScore != null)
                return false;
        }
        else if (!this.confidenceScore.equals(other.confidenceScore))
            return false;
        if (this.severityLevel == null) {
            if (other.severityLevel != null)
                return false;
        }
        else if (!this.severityLevel.equals(other.severityLevel))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.detectionMetadata == null) {
            if (other.detectionMetadata != null)
                return false;
        }
        else if (!this.detectionMetadata.equals(other.detectionMetadata))
            return false;
        if (this.detectedAt == null) {
            if (other.detectedAt != null)
                return false;
        }
        else if (!this.detectedAt.equals(other.detectedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.violationId == null) ? 0 : this.violationId.hashCode());
        result = prime * result + ((this.jobId == null) ? 0 : this.jobId.hashCode());
        result = prime * result + ((this.violationType == null) ? 0 : this.violationType.hashCode());
        result = prime * result + ((this.timestampSeconds == null) ? 0 : this.timestampSeconds.hashCode());
        result = prime * result + ((this.confidenceScore == null) ? 0 : this.confidenceScore.hashCode());
        result = prime * result + ((this.severityLevel == null) ? 0 : this.severityLevel.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.detectionMetadata == null) ? 0 : this.detectionMetadata.hashCode());
        result = prime * result + ((this.detectedAt == null) ? 0 : this.detectedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ViolationEvents (");

        sb.append(violationId);
        sb.append(", ").append(jobId);
        sb.append(", ").append(violationType);
        sb.append(", ").append(timestampSeconds);
        sb.append(", ").append(confidenceScore);
        sb.append(", ").append(severityLevel);
        sb.append(", ").append(description);
        sb.append(", ").append(detectionMetadata);
        sb.append(", ").append(detectedAt);

        sb.append(")");
        return sb.toString();
    }
}
